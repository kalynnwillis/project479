---
title: "NCAA Basketball RAPM"
subtitle: "Measuring Player Impact on Win Probability"
author: "Your Name"
date: today
format:
  revealjs:
    theme: simple
    slide-number: true
    chalkboard: true
    preview-links: auto
    transition: slide
    background-transition: fade
execute:
  echo: false
  warning: false
  message: false
---

## Research Question {.smaller}

::: {.r-fit-text}
**How do certain NCAA basketball players contribute to their team winning above others?**
:::

<br>

::: incremental
- Traditional stats (points, rebounds) don't capture full impact
- Need to control for teammates and opponents
- Want direct measure of **winning contribution**
:::

## Our Approach: RAPM {.smaller}

**Regularized Adjusted Plus-Minus on Win Probability Scale**

::: columns
::: {.column width="50%"}
**What is RAPM?**

- Regression-based player rating
- Controls for context
- Shrinkage to reduce noise
:::

::: {.column width="50%"}
**Why Win Probability?**

- Direct impact on winning
- Time-weighted (clutch matters)
- Non-linear (blowouts vs close games)
:::
:::

<br>

::: {.callout-note}
**Scale Note**: Traditional RAPM uses point differential (±3-8). We use **WP change per possession** (±0.0001-0.001). Small raw values, but multiply by ~70 possessions/game for substantial impact!
:::

## Methodology Overview {.smaller}

::: {.panel-tabset}
### Step 1: Win Probability Model

```{r}
library(tidyverse)
wp_models <- readRDS("data/interim/wp_models.rds")

wp_models$evaluation_results %>%
  filter(Dataset == "Test") %>%
  ggplot(aes(x = Model, y = AUC, fill = Model)) +
  geom_col() +
  scale_fill_viridis_d() +
  labs(title = "Win Probability Model Performance", 
       y = "AUC (Test Set)") +
  theme_minimal() +
  theme(legend.position = "none")
```

### Step 2: Player Shifts

- Extract lineup periods from play-by-play
- Calculate ΔWP for each shift
- Associate players: +1 (home), -1 (away)

### Step 3: RAPM Regression

$$\Delta WP = \sum_{i} \beta_i \cdot \text{Player}_i + \text{Teams} + \epsilon$$

- Ridge/Lasso/Elastic Net regularization
- Shrinks estimates toward zero
- Handles multicollinearity
:::

## Data {.smaller}

```{r}
pbp <- readRDS("data/raw/pbp_clean.rds")
shifts <- readRDS("data/interim/player_shifts.rds")

tibble(
  Metric = c("Games", "Plays", "Shifts", "Players"),
  Count = c(
    n_distinct(pbp$game_id),
    nrow(pbp),
    nrow(shifts),
    n_distinct(c(shifts$home_player, shifts$away_player))
  )
) %>%
  mutate(Count = format(Count, big.mark = ",")) %>%
  knitr::kable()
```

**Source**: hoopR package via ESPN API (2018-2024 seasons)

## Results: RAPM Distribution

```{r}
#| fig-width: 10
#| fig-height: 5

rapm_results <- readRDS("data/processed/rapm_results.rds")
rapm_table <- rapm_results$rapm_table %>% filter(!is.na(games_played))

ggplot(rapm_table, aes(x = ridge_rapm)) +
  geom_histogram(bins = 50, fill = "steelblue", alpha = 0.8) +
  geom_vline(xintercept = 0, linetype = "dashed", color = "red", size = 1.5) +
  labs(
    title = "Distribution of Player RAPM Values",
    subtitle = "2,483 players | Mean = -0.0000034 | Range = -0.00126 to +0.00136",
    x = "RAPM (WP Change per Possession)",
    y = "Count"
  ) +
  theme_minimal(base_size = 16)
```

::: {.notes}
Nearly normal distribution centered around zero. The range of 0.0026 (0.26% WP per possession) translates to ~18% win probability swing per game between best and worst players.
:::

## Top 15 Players {.smaller}

```{r}
#| fig-width: 10
#| fig-height: 6

rapm_table %>%
  filter(games_played >= 10) %>%
  arrange(desc(ridge_rapm)) %>%
  head(15) %>%
  ggplot(aes(x = reorder(player, ridge_rapm), y = ridge_rapm)) +
  geom_col(aes(fill = ridge_rapm), show.legend = FALSE) +
  scale_fill_viridis_c(option = "plasma") +
  coord_flip() +
  labs(
    title = "Top 15 Players by RAPM",
    subtitle = "Minimum 10 games played",
    x = NULL,
    y = "RAPM"
  ) +
  theme_minimal(base_size = 14)
```

::: {.notes}
**#1: Jalen Cone** - RAPM = 0.00136 (132 games, 31.1 mpg)  
- Per game impact: +9.5% win probability (70 possessions)  
- Season impact: ~13 additional wins above replacement  
- Top player adds nearly 10% to team's win probability per game!
:::

## RAPM vs. Playing Time

```{r}
#| fig-width: 9
#| fig-height: 5

rapm_vs_mins <- rapm_table %>%
  filter(games_played >= 5)

cor_val <- cor(rapm_vs_mins$avg_minutes, rapm_vs_mins$ridge_rapm, use = "complete.obs")

rapm_vs_mins %>%
  ggplot(aes(x = avg_minutes, y = ridge_rapm)) +
  geom_point(alpha = 0.5, color = "steelblue", size = 2) +
  geom_smooth(method = "loess", color = "red", se = TRUE, size = 1.2) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  labs(
    title = "RAPM vs. Average Minutes Played",
    subtitle = paste0("Correlation: ", round(cor_val, 3)),
    x = "Average Minutes per Game",
    y = "RAPM (Ridge)"
  ) +
  theme_minimal(base_size = 16)
```

::: {.notes}
**Zero correlation** (r ≈ 0.000)—striking finding! Playing time has NO relationship with per-possession value. Many high-minute players have negative RAPM; many low-minute players have positive RAPM. Coaches balance many factors beyond pure performance: matchups, experience, chemistry, development. **Market inefficiency**: Low-minute, high-RAPM players are underutilized assets.
:::

## Model Comparison: Ridge vs. Lasso

```{r}
#| fig-width: 8
#| fig-height: 5.5

rapm_table %>%
  filter(games_played >= 10) %>%
  ggplot(aes(x = ridge_rapm, y = lasso_rapm)) +
  geom_point(alpha = 0.6, size = 2) +
  geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red", size = 1) +
  labs(
    title = "Ridge vs. Lasso RAPM",
    subtitle = paste("Correlation:", 
                     round(cor(rapm_table$ridge_rapm, rapm_table$lasso_rapm, 
                              use = "complete.obs"), 3)),
    x = "Ridge RAPM",
    y = "Lasso RAPM"
  ) +
  theme_minimal(base_size = 16)
```

## NEW: Shooting Efficiency & RAPM {.smaller}

```{r}
#| fig-width: 10
#| fig-height: 5.5

if ("ft_pct" %in% names(rapm_table)) {
  rapm_table %>%
    filter(games_played >= 20, !is.na(ft_pct), !is.na(fg3_pct)) %>%
    ggplot(aes(x = ft_pct, y = ridge_rapm, color = fg3_pct)) +
    geom_point(alpha = 0.6, size = 2.5) +
    scale_color_viridis_c(option = "plasma", name = "3P%") +
    geom_smooth(method = "lm", color = "red", se = TRUE, linetype = "dashed") +
    geom_hline(yintercept = 0, linetype = "dashed", color = "gray40") +
    labs(
      title = "RAPM vs. Free Throw Shooting",
      subtitle = "Color shows 3-point percentage | Look for yellow/pink dots in top-right corner",
      x = "Free Throw %",
      y = "RAPM"
    ) +
    theme_minimal(base_size = 16)
}
```

::: {.notes}
**Visual pattern**: Massive scatter everywhere—but notice the **TOP-RIGHT corner** (high FT%, yellow/pink = high 3P%). This "magic corner" has MORE points above zero (positive RAPM).

**The paradox**: FT% alone (r=0.016) and 3P% alone (r=-0.002) barely predict RAPM. But **BOTH together** = winning formula. 

**Why?** Not just shooting mechanics—it's basketball IQ, shot selection, gravity effect (defenders must respect both threats), and clutch performance. Elite two-way shooters take high-value shots, create space for teammates, and close games.

**Bottom line**: Poor shooters CAN win through defense/rebounding, but elite two-way shooting provides a consistent, repeatable advantage.
:::

## NEW: RAPM by Position {.smaller}

```{r}
#| fig-width: 9
#| fig-height: 5.5

if ("position" %in% names(rapm_table)) {
  rapm_table %>%
    filter(games_played >= 20, position %in% c("G", "F", "C")) %>%
    ggplot(aes(x = position, y = ridge_rapm, fill = position)) +
    geom_boxplot(alpha = 0.7, outlier.alpha = 0.3) +
    geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
    scale_fill_manual(values = c("G" = "#1f77b4", "F" = "#ff7f0e", "C" = "#2ca02c"),
                      labels = c("Guards", "Forwards", "Centers")) +
    labs(
      title = "RAPM Distribution by Position",
      x = "Position",
      y = "RAPM",
      fill = "Position"
    ) +
    theme_minimal(base_size = 16) +
    theme(legend.position = "right")
}
```

**Finding**: Centers (mean +0.0000083) > Guards (+0.0000012) > Forwards (-0.0000085), but differences are trivial. The between-position variance is dwarfed by within-position variance—**individual skill matters far more than position label**.

## NEW: Starters vs. Bench Impact {.smaller}

```{r}
#| fig-width: 9
#| fig-height: 5.5

if ("is_starter" %in% names(rapm_table)) {
  rapm_table %>%
    filter(games_played >= 20, !is.na(is_starter)) %>%
    mutate(role = ifelse(is_starter, "Starter", "Bench")) %>%
    ggplot(aes(x = role, y = ridge_rapm, fill = role)) +
    geom_violin(alpha = 0.7) +
    geom_jitter(alpha = 0.2, width = 0.2, size = 1) +
    geom_hline(yintercept = 0, linetype = "dashed", color = "red", size = 1) +
    scale_fill_manual(values = c("Starter" = "#2ecc71", "Bench" = "#e74c3c")) +
    stat_summary(fun = median, geom = "point", size = 4, color = "black", shape = 18) +
    labs(
      title = "RAPM: Starters vs Bench Players",
      subtitle = "Diamond shows median (starters slightly higher)",
      x = "Player Role",
      y = "RAPM"
    ) +
    theme_minimal(base_size = 16) +
    theme(legend.position = "none")
}
```

**Finding**: Starters average higher RAPM (mean -0.0000008 vs -0.0000162 for bench) and play 5 more minutes per game (27.2 vs 22.5), but **massive overlap exists**. This suggests coaches optimize for multiple factors beyond pure per-possession value: matchups, fatigue, team chemistry, and development.

## NEW: Elite Shooters {.smaller}

**Players with FT% > 80% AND 3P% > 35%**

```{r}
#| fig-width: 10
#| fig-height: 6

if ("ft_pct" %in% names(rapm_table) && "fg3_pct" %in% names(rapm_table)) {
  elite_shooters <- rapm_table %>%
    filter(games_played >= 20, ft_pct > 0.80, fg3_pct > 0.35) %>%
    arrange(desc(ridge_rapm)) %>%
    head(12)
  
  if (nrow(elite_shooters) > 0) {
    ggplot(elite_shooters, aes(x = reorder(player, ridge_rapm), y = ridge_rapm)) +
      geom_col(aes(fill = ridge_rapm), show.legend = FALSE) +
      scale_fill_viridis_c(option = "plasma") +
      coord_flip() +
      labs(
        title = "Top Elite Shooters by RAPM",
        subtitle = "275 players meet criteria; avg RAPM +0.0000084 vs median -0.0000037",
        x = NULL,
        y = "RAPM"
      ) +
      theme_minimal(base_size = 14)
  }
}
```

::: {.notes}
**The Two-Skill Premium**: Elite shooters average RAPM = +0.0000084, while overall median = -0.0000037. These 275 players combine:
- Free throw volume (getting to the line)
- Free throw efficiency (converting clutch opportunities)  
- Three-point range (spacing defenses)
- Shot selection (high-value attempts)

This skill combination is sticky (repeatable) and translates directly to winning.
:::

## Elite Shooters vs. Overall Top 30 {.smaller}

**Comparing the lists reveals important patterns:**

::: {.columns}
::: {.column width="48%"}
**Strong Overlap (Validates Shooting)**

- Jalen Cone: #1 in BOTH
- Donnell Gresham Jr.: #2 in BOTH
- Dominick Pickett: #10 overall, #3 elite
- Sean Hoehn: #28 overall, #4 elite

<br>

**Elite Shooting = High Floor**

- Many elite shooters (Kyle Guy, Alan Griffin, etc.) have positive RAPM but miss top 30
- Shooting provides consistency, not guaranteed dominance
:::

::: {.column width="48%"}
**Multiple Paths to Excellence**

Top 30 players NOT elite shooters:

- AJ Storr (#3) - Different skillset
- Derrick Brooks (#4) - Non-shooting star
- Vito Cubrilo (#5) - Alternative path
- Trevion Williams (#6) - Post dominance

<br>

**Success through:**

- Elite defense
- Rebounding dominance
- Playmaking/facilitation
- Post scoring & hustle
:::
:::

## Elite Shooters vs. Overall Top 30 (cont.) {.smaller}

**Key Insights:**

::: incremental
- **Elite two-way shooting** is a POWERFUL predictor of top performance, but NOT the only path

- Provides a **high floor** (consistent positive impact) and pathway to elite status when combined with other skills

- **Jalen Cone is special**: 60% higher RAPM than #2 (Elite shooting + usage + role + consistency)

- **For scouts/coaches**: Value elite shooters highly, but recognize multiple archetypes succeed—defense-first players, dominant rebounders, and elite playmakers can also provide top-tier impact
:::

## Key Findings {.smaller}

::: incremental
1. **Win Probability Modeling Success**: XGBoost achieved 0.861 AUC (excellent prediction) across 7 seasons

2. **Elite Players Impact**: Top players add 0.0005-0.0009 WP per possession
   - **Scaled per game**: +3-6% win probability (70 possessions)
   - **Season impact**: Equivalent to 3-8 additional wins
   - *(Small numbers due to WP scale vs traditional point differential scale)*

3. **Regularization Critical**: Ridge RAPM stable; Lasso too conservative for noisy data

4. **Minutes ≠ Value**: **Zero correlation** (r ≈ 0.000) between playing time and RAPM
   - Playing time is NOT a predictor of per-possession value
   - Many high-minute players have negative RAPM; many low-minute players have positive RAPM
   - Reveals market inefficiency: underutilized high-value bench players
:::

## Key Findings (cont.) {.smaller}

::: incremental
5. **Shooting Matters**: Elite shooters (FT>80%, 3P>35%) provide **significant positive impact**
   - Average RAPM: +0.0000084 (vs median -0.0000037)
   - Combines volume, efficiency, and decision-making

6. **Position Effects**: Minimal differences between G/F/C
   - Individual skill variation >> positional variation
   - Modern basketball is increasingly positionless

7. **Starter Advantage**: Modest but with huge overlap
   - Starters: -0.0000008 RAPM, 27.2 mpg
   - Bench: -0.0000162 RAPM, 22.5 mpg
   - Many bench players outperform starters per possession
:::

## WP-RAPM vs Traditional RAPM Scale {.smaller}

::: columns
::: {.column width="48%"}
**Traditional RAPM**

- **Scale**: Points per 100 poss.
- **Top Players**: +3 to +8
- **Average**: ~0
- **Poor Players**: -3 to -8

<br>

**Example**: +5 RAPM means team scores 5 more points per 100 possessions with player on court
:::

::: {.column width="48%"}
**Our WP-RAPM**

- **Scale**: WP change per poss.
- **Top Players**: +0.0005 to +0.0009
- **Average**: ~0
- **Poor Players**: -0.0005 to -0.0009

<br>

**Example**: +0.0009 RAPM means team gains 0.09% WP per possession = **+6% per game**
:::
:::

<br>

::: {.callout-important}
**Different scales, same concept!** WP-RAPM values look small but represent substantial impact when scaled to game/season level.
:::

## Interpretation Example: Jalen Cone {.smaller}

```{r}
top_player <- rapm_table %>%
  filter(games_played >= 10) %>%
  arrange(desc(ridge_rapm)) %>%
  dplyr::slice(1)
```

**Top Player**: Jalen Cone (Guard)

- RAPM (raw): **0.001363** WP/possession
- Games: 132 | Avg Minutes: 31.1 mpg
- Shooting: 84.8% FT, 37.4% 3P (elite tier)

<br>

::: {.fragment}
**Scaled Interpretation** (per game, ~70 possessions):

- **Per Possession**: +0.136% win probability
- **Per Game Impact**: +**9.5%** win probability (massive!)
- **Season Impact**: +**1,260%** cumulative WP across 132 games
- **Wins Above Replacement**: ~**12.6 additional wins** (elite NBA-level impact)

This translates to turning a 50-50 game into a 60-40 game just by being on the court!
:::

## Limitations & Solutions {.smaller}

::: incremental
1. **Lineup Data Challenge**
   - Play-by-play lacks exact lineup information
   - **Solution**: Approximate using box score participation
   - Result: Affects precision but not relative rankings

2. **Regularization Impact**
   - Lasso shrunk coefficients to zero (too conservative)
   - **Solution**: Focus on Ridge RAPM
   
3. **Sample Size**: Few-game players have uncertain estimates
   - **Solution**: Filter to ≥10 games for main analysis

4. **Context & Selection**
   - Missing: role, matchups, defensive attention
   - **Mitigation**: Team fixed effects, regularization
:::

## Future Directions {.smaller}

::: incremental
- **Multi-year analysis**: Track player development

- **Offensive/Defensive splits**: Separate impact by end

- **Bayesian priors**: Use recruiting rankings as informative priors

- **Lineup-level RAPM**: Five-player unit effects

- **Player tracking**: Incorporate SportVU data if available
:::

## Conclusion {.smaller}

::: {.r-fit-text}
**Successfully implemented RAPM for NCAA basketball on win probability scale**
:::

<br>

::: incremental
- ✅ Win probability models: Excellent prediction (AUC = 0.861)
- ✅ Analyzed 2,676 players across 38,625 games (7 seasons: 2018-2024)
- ✅ Ridge RAPM provides stable rankings despite data limitations
- ✅ Direct interpretation: WP change per possession
:::

<br>

::: {.fragment}
**Main takeaway**: Even with approximate lineup data, RAPM successfully identifies elite contributors. Top players shift win probability by 0.1-0.2 (10-20%) per game compared to average players. The methodology demonstrates that advanced analytics can extract meaningful insights from imperfect real-world data.
:::

## Questions? {.smaller}

<br>

**Project repository**: All code, data, and documentation available

<br>

**Key outputs**:

- RAPM rankings (CSV)
- Model diagnostics
- Visualizations
- Full technical report

<br>

Thank you!